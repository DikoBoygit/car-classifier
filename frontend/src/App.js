import React, { useState } from 'react';
import axios from 'axios';
import './App.css';

function App() {
  const [selectedFile, setSelectedFile] = useState(null);
  const [preview, setPreview] = useState(null);
  const [result, setResult] = useState(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');

  const handleFileChange = (event) => {
    const file = event.target.files[0];
    if (file) {
      setSelectedFile(file);
      setPreview(URL.createObjectURL(file));
      setResult(null);
      setError('');
    }
  };

  const handleSubmit = async () => {
    if (!selectedFile) {
      setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª.');
      return;
    }

    const formData = new FormData();
    formData.append('file', selectedFile);

    setLoading(true);
    setError('');
    setResult(null);

    try {
      // –£–±–µ–¥–∏—Å—å, —á—Ç–æ URL –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π! –≠—Ç–æ –∞–¥—Ä–µ—Å —Ç–≤–æ–µ–≥–æ –±—ç–∫–µ–Ω–¥-—Å–µ—Ä–≤–µ—Ä–∞.
      const response = await axios.post('http://127.0.0.1:8000/predict', formData, {
        headers: {
          'Content-Type': 'multipart/form-data',
        },
      });
      setResult(response.data);
    } catch (err) {
      setError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±—ç–∫–µ–Ω–¥-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –æ—Ç–≤–µ—á–∞–µ—Ç.');
      console.error(err);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="App">
      <div className="container">
        <h1>–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è üöó</h1>
        <p>–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –∫—É–∑–æ–≤–∞.</p>
        
        <div className="uploader-card">
          <input id="file-upload" type="file" accept="image/*" onChange={handleFileChange} />
          <button onClick={handleSubmit} disabled={loading || !selectedFile}>
            {loading ? '–ê–Ω–∞–ª–∏–∑...' : '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å'}
          </button>
        </div>

        {error && <p className="error-message">{error}</p>}

        <div className="content-area">
          {preview && (
            <div className="card">
              <h3>–í–∞—à–µ —Ñ–æ—Ç–æ:</h3>
              <img src={preview} alt="–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ" />
            </div>
          )}

          {result && !result.error && (
            <div className="card result-card">
              <h3>–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞:</h3>
              <p>
                <strong>–°–æ—Å—Ç–æ—è–Ω–∏–µ:</strong> 
                <span className={result.integrity === '–ë–∏—Ç—ã–π' ? 'damaged' : 'whole'}>
                  {result.integrity}
                </span>
              </p>
              <p>
                <strong>–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å:</strong> {result.confidence}
              </p>
            </div>
          )}
        </div>
      </div>
    </div>
  );
}

export default App;

